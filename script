-- Main Configuration for the UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Moonly v2",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Rayfield Interface Suite",
    LoadingSubtitle = "By ken",
    Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false,

    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- Create a custom folder for your hub/game
        FileName = "Big Hub"
    },

    Discord = {
        Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
        Invite = "tgDgHgyBEz", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
        RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },

    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
        Title = "Ken system",
        Subtitle = "Key System",
        Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
        FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
        SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
        GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
        Key = {"Hello", "nigga"} -- List of keys that will be accepted by the system
    }
})

-- Main Tab for features like Grab Ball, Auto Grab Ball, etc.
local MainTab = Window:CreateTab("Main", 4483362458)

local Section = MainTab:CreateSection("Features")
local Divider = MainTab:CreateDivider()

-- Auto Grab Ball Variables and Functions
local autoGrabBallConnection = nil

-- Function to reset the ball's data
local function resetBallData(ball)
    if ball then
        -- Reset any custom properties or data the ball might have
        if ball:FindFirstChild("Owner") then
            ball.Owner.Value = nil
        end
        if ball:FindFirstChild("Pickable") then
            ball.Pickable.Value = true -- Make the ball pickable again
        end

        -- Reset velocity or position if necessary
        ball.AssemblyLinearVelocity = Vector3.zero
        ball.AssemblyAngularVelocity = Vector3.zero

        print("Ball data has been reset.")
    else
        warn("No ball to reset.")
    end
end

-- Function to automatically grab the ball
local function grabBallAutomatically()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local ball = workspace:FindFirstChild("Football")

    if ball then
        -- Check if the ball is pickable
        local isPickable = true
        if ball:FindFirstChild("Pickable") then
            isPickable = ball.Pickable.Value
        end

        if isPickable then
            local ballPosition = ball.Position
            local distance = (ballPosition - rootPart.Position).Magnitude

            -- If the ball is within range (e.g., 10 studs), teleport it to the player
            if distance < 10 then
                ball.CFrame = rootPart.CFrame
                print("Football grabbed by player.")
            end
        else
            -- Reset the ball's data if it's no longer pickable
            resetBallData(ball)
        end
    else
        warn("Football not found.")
    end
end

-- Auto Grab Toggle
MainTab:CreateToggle({
    Name = "Auto Grab Ball (for goal keeper)",
    CurrentValue = false, -- Start with the feature disabled
    Flag = "AutoGrabToggle",
    Callback = function(Value)
        if Value then
            -- Start checking for the ball every 0.1 seconds
            autoGrabBallConnection = game:GetService("RunService").Heartbeat:Connect(function()
                grabBallAutomatically()
            end)
        else
            -- Disconnect the auto grab ball connection when the toggle is turned off
            if autoGrabBallConnection then
                autoGrabBallConnection:Disconnect()
                autoGrabBallConnection = nil
                print("Auto Grab Ball stopped.")
            end
        end
    end,
})
